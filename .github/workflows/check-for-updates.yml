name: Check for Game Updates

on:
  schedule:
    - cron: '0 22 * * *'  # Run daily at 22:00 UTC (00:00 SAST)
  workflow_dispatch:  # Allow manual triggering

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allow pushing changes back to repository
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Check for completed matches
      env:
        THESPORTSDB_API_KEY: ${{ secrets.THESPORTSDB_API_KEY }}
        APISPORTS_API_KEY: ${{ secrets.APISPORTS_API_KEY }}
        HIGHLIGHTLY_API_KEY: ${{ secrets.HIGHLIGHTLY_API_KEY }}
      run: |
        echo "🔍 Checking for completed matches..."
        echo "📊 This will detect ALL completed matches from TheSportsDB"
        python scripts/detect_completed_matches.py --db data.sqlite --verbose

    - name: Check for new games and upcoming fixtures
      env:
        THESPORTSDB_API_KEY: ${{ secrets.THESPORTSDB_API_KEY }}
        APISPORTS_API_KEY: ${{ secrets.APISPORTS_API_KEY }}
        HIGHLIGHTLY_API_KEY: ${{ secrets.HIGHLIGHTLY_API_KEY }}
      run: |
        echo "📥 Checking for new games and upcoming fixtures..."
        echo "🏉 This will capture ALL new upcoming games and completed results"
        python scripts/enhanced_auto_update.py --db data.sqlite --verbose
        
    - name: Post-update duplicate cleanup
      run: |
        echo "🧹 Running post-update cleanup..."
        python cleanup_duplicates_post_update.py
        
    - name: Commit changes and trigger retraining if needed
      if: always()
      run: |
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are any changes
        if [ -n "$(git status --porcelain)" ]; then
          echo "📝 Changes detected - committing updates..."
          
          # Add all modified files (checkpoint, logs, data.sqlite if changed)
          git add -A
          
          # Check if retrain flag exists
          if [ -f "retrain_needed.flag" ]; then
            echo "🔄 Retraining flag found - triggering AI model retraining"
            echo "📊 This ensures AI captures all new upcoming games and completed results"
            git commit -m "Trigger retraining: New games or completed matches detected [skip ci]"
          else
            echo "📊 Checkpoint/log updates only - no retraining needed"
            git commit -m "Update checkpoints and logs [skip ci]"
          fi
          
          # Pull before push to handle concurrent updates
          echo "🔄 Pulling latest changes..."
          git pull --rebase origin main || git pull origin main
          
          # Push changes
          git push
        else
          echo "✅ No updates needed - database is up to date"
        fi
